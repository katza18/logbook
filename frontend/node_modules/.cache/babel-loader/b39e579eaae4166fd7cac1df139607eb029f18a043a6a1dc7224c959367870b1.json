{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nconst mealsStore = create(set => ({\n  meals: null,\n  create: false,\n  createForm: {\n    title: \"\",\n    body: \"\",\n    date: \"\",\n    log: null,\n    _id: null\n  },\n  updateForm: {\n    title: \"\",\n    body: \"\",\n    date: null,\n    _id: null\n  },\n  convertSet: set => {\n    const arr = [];\n    for (const item of set) {\n      arr.push(item);\n    }\n    return arr;\n  },\n  setCreateFalse: () => {\n    set({\n      create: false\n    });\n  },\n  updateCreateFormField: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        createForm: {\n          ...state.createForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  updateUpdateFormField: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        updateForm: {\n          ...state.updateForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  fetchMeals: async _id => {\n    const res = await axios.get(`/logs/${_id.id}/meals`);\n    set({\n      meals: res.data.meals\n    });\n  },\n  createMeal: async (e, log_id) => {\n    e.preventDefault();\n\n    //add logbook to the createForm\n    set(state => {\n      return {\n        createForm: {\n          ...state.createForm,\n          log: log_id.id\n        }\n      };\n    });\n    const {\n      createForm,\n      meals\n    } = mealsStore.getState();\n    const res = await axios.post(\"/meals\", createForm);\n    set({\n      meals: [...meals, res.data.meal],\n      createForm: {\n        title: \"\",\n        body: \"\",\n        date: \"\",\n        logbook: null,\n        _id: null\n      },\n      create: false\n    });\n  },\n  deleteMeal: async _id => {\n    const {\n      meals\n    } = mealsStore.getState();\n    await axios.delete(`/meals/${_id}`);\n    const newMeals = meals.filter(meal => {\n      return meal._id !== _id;\n    });\n    set({\n      meal: newMeals\n    });\n  },\n  toggleUpdate: meal => {\n    set({\n      updateForm: {\n        title: meal.title,\n        body: meal.body,\n        date: meal.date,\n        _id: meal._id\n      }\n    });\n  },\n  toggleCreate: () => {\n    set({\n      create: true\n    });\n  },\n  updateMeal: async e => {\n    e.preventDefault();\n    const {\n      updateForm: {\n        title,\n        body,\n        date,\n        _id\n      },\n      meals\n    } = mealsStore.getState();\n    const res = await axios.put(`/meals/${_id}`, {\n      title,\n      body,\n      date\n    });\n    const newMeals = [...meals];\n    const mealIndex = meals.findIndex(meal => {\n      return meal._id === _id;\n    });\n    newMeals[mealIndex] = res.data.meal;\n    set({\n      meals: newMeals,\n      updateForm: {\n        title: \"\",\n        body: \"\",\n        _id: null,\n        date: null\n      }\n    });\n  }\n}));\nexport default mealsStore;","map":{"version":3,"names":["create","axios","mealsStore","set","meals","createForm","title","body","date","log","_id","updateForm","convertSet","arr","item","push","setCreateFalse","updateCreateFormField","e","name","value","target","state","updateUpdateFormField","fetchMeals","res","get","id","data","createMeal","log_id","preventDefault","getState","post","meal","logbook","deleteMeal","delete","newMeals","filter","toggleUpdate","toggleCreate","updateMeal","put","mealIndex","findIndex"],"sources":["/Users/aidankatz/Projects/logbook/frontend/src/stores/mealsStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\n\nconst mealsStore = create((set) => ({\n    meals: null,\n    create: false,\n\n    createForm: {\n        title: \"\",\n        body: \"\",\n        date: \"\",\n        log: null,\n        _id: null\n    },\n\n    updateForm: {\n        title: \"\",\n        body: \"\",\n        date: null,\n        _id: null\n    },\n\n    convertSet: (set) => {\n        const arr = [];\n        for(const item of set) {\n            arr.push(item);\n        }\n        return arr;\n    },\n\n    setCreateFalse: () => {\n        set({\n            create: false\n        });\n    },\n\n    updateCreateFormField: (e) => {\n        const {name, value} = e.target;\n        set((state) => {\n            return {\n                createForm: {\n                    ...state.createForm,\n                    [name]: value\n                }\n            };\n        });\n    },\n\n    updateUpdateFormField: (e) => {\n        const {name, value} = e.target;\n\n        set(state => {\n            return {\n                updateForm: {\n                    ...state.updateForm,\n                    [name]: value\n                }\n            }\n        });\n    },\n\n    fetchMeals: async (_id) => {\n        const res = await axios.get(`/logs/${_id.id}/meals`);\n        set({\n            meals: res.data.meals\n        });\n    },\n\n    createMeal: async (e, log_id) => {\n        e.preventDefault();\n\n        //add logbook to the createForm\n        set(state => {\n            return {\n                createForm: {\n                    ...state.createForm,\n                    log: log_id.id\n                }\n            }\n        });\n\n        const { createForm, meals } = mealsStore.getState();\n\n        const res = await axios.post(\"/meals\", createForm);\n\n        set({\n            meals: [...meals, res.data.meal],\n            createForm: { title: \"\", body: \"\", date: \"\", logbook: null, _id: null},\n            create: false\n        });\n    },\n\n    deleteMeal: async (_id) => {\n        const { meals } = mealsStore.getState();\n\n        await axios.delete(`/meals/${_id}`);\n\n        const newMeals = meals.filter((meal) => {\n            return meal._id !== _id;\n        });\n\n        set({\n            meal: newMeals\n        });\n    },\n\n    toggleUpdate: (meal) => {\n        set({\n            updateForm: {\n                title: meal.title,\n                body: meal.body,\n                date: meal.date,\n                _id: meal._id\n            }\n        });\n    },\n\n    toggleCreate: () => {\n        set({\n            create: true\n        });\n    },\n\n    updateMeal: async (e) => {\n        e.preventDefault();\n        const {updateForm: {title, body, date, _id}, meals} = mealsStore.getState();\n        const res = await axios.put(`/meals/${_id}`, {title, body, date});\n\n        const newMeals = [...meals];\n        const mealIndex = meals.findIndex((meal) => {\n            return meal._id === _id;\n        });\n        newMeals[mealIndex] = res.data.meal;\n\n        set({\n            meals: newMeals,\n            updateForm: {\n                title: \"\", body: \"\", _id: null, date: null\n            }\n        });\n    }\n  }));\n\nexport default mealsStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}