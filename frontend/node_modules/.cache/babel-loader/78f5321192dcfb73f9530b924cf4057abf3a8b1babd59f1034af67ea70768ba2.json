{"ast":null,"code":"var _jsxFileName = \"/Users/aidankatz/Projects/logbook-simple/frontend/src/components/ExercisesTable.js\";\nimport Table from 'react-bootstrap/Table';\nimport exercisesStore from '../stores/exercisesStore';\nimport Exercise from './Exercise';\nimport ExerciseStats from './ExerciseStats';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExercisesTable(_ref) {\n  let {\n    workout_id\n  } = _ref;\n  const store = exercisesStore();\n  let count = 1,\n    reps = 0,\n    sets = 0;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        form: \"update\",\n        onSubmit: store.updateExercise,\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Intensity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: 2,\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: store.exercises && store.exercises.map(exercise => {\n              try {\n                if (exercise.workout && exercise.workout.localeCompare(workout_id.id) === 0) reps += parseInt(exercise.reps);\n                sets += parseInt(exercise.sets);\n                return /*#__PURE__*/_jsxDEV(Exercise, {\n                  number: count++,\n                  exercise: exercise\n                }, exercise._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 32\n                }, this);\n              } catch (err) {\n                console.log(err);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => store.createExercise(e, workout_id.id),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), store.updating && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(ExerciseStats, {\n          reps: reps,\n          sets: sets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = ExercisesTable;\nvar _c;\n$RefreshReg$(_c, \"ExercisesTable\");","map":{"version":3,"names":["Table","exercisesStore","Exercise","ExerciseStats","Col","Row","jsxDEV","_jsxDEV","ExercisesTable","_ref","workout_id","store","count","reps","sets","className","children","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","updateExercise","striped","bordered","hover","variant","colSpan","exercises","map","exercise","workout","localeCompare","id","parseInt","number","_id","err","console","log","onClick","e","createExercise","updating","type","_c","$RefreshReg$"],"sources":["/Users/aidankatz/Projects/logbook-simple/frontend/src/components/ExercisesTable.js"],"sourcesContent":["import Table from 'react-bootstrap/Table';\nimport exercisesStore from '../stores/exercisesStore';\nimport Exercise from './Exercise';\nimport ExerciseStats from './ExerciseStats';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nexport default function ExercisesTable({workout_id}) {\n    const store = exercisesStore();\n\n    let count = 1, reps = 0, sets = 0;\n\n\n    return(\n    <Row className=\"body\">\n    <Col>\n        <h1>Exercises</h1>\n        <form form=\"update\" onSubmit={store.updateExercise}>\n        <Table striped bordered hover variant=\"dark\">\n        <thead>\n        <tr>\n            <th>#</th>\n            <th>Exercise</th>\n            <th>Weight</th>\n            <th>Sets</th>\n            <th>Reps</th>\n            <th>Intensity</th>\n            <th>Notes</th>\n            <th colSpan={2}>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n            {/* eslint-disable-next-line*/}\n            {store.exercises && store.exercises.map(exercise => {\n                try {\n                    if (exercise.workout && exercise.workout.localeCompare(workout_id.id) === 0)\n                        reps += parseInt(exercise.reps);\n                        sets += parseInt(exercise.sets);\n                        return <Exercise number={count++} exercise={exercise} key={exercise._id} />;\n                } catch(err) {\n                    console.log(err);\n                }\n            })}\n        </tbody>\n        </Table>\n        <button onClick={(e) => store.createExercise(e, workout_id.id)}>Add</button>\n        {store.updating && <button type=\"submit\">Update</button>}\n        <ExerciseStats reps={reps} sets={sets}/>\n        </form>\n    </Col>\n    </Row>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}