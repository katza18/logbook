{"ast":null,"code":"var _jsxFileName = \"/Users/aidankatz/Projects/logbook/frontend/src/components/Meals.js\";\nimport mealsStore from \"../stores/mealsStore\";\nimport React from 'react';\nimport CreateForm from './MealCreateForm';\nimport UpdateForm from \"./MealUpdateForm\";\nimport DateAccordion from \"./DateAccordion\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meals(_ref) {\n  let {\n    log_id\n  } = _ref;\n  const store = mealsStore();\n  const set = new Set();\n  const arr = [];\n  function convertSet(set) {\n    for (const item of set) {\n      arr.push(item);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"central-items\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Meals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), store.meals && store.meals.map(meal => {\n      if (meal.log && meal.log.localeCompare(log_id.id) === 0) {\n        set.add(meal.date);\n      }\n    }), convertSet(set), /*#__PURE__*/_jsxDEV(Accordion, {\n      children: arr && arr.map(date => {\n        return /*#__PURE__*/_jsxDEV(DateAccordion, {\n          date: date,\n          log_id: log_id\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n      log_id: log_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.toggleCreate(),\n      children: \"Create New Meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = Meals;\nvar _c;\n$RefreshReg$(_c, \"Meals\");","map":{"version":3,"names":["mealsStore","React","CreateForm","UpdateForm","DateAccordion","Accordion","jsxDEV","_jsxDEV","Meals","_ref","log_id","store","set","Set","arr","convertSet","item","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","meals","map","meal","log","localeCompare","id","add","date","onClick","toggleCreate","_c","$RefreshReg$"],"sources":["/Users/aidankatz/Projects/logbook/frontend/src/components/Meals.js"],"sourcesContent":["import mealsStore from \"../stores/mealsStore\";\nimport React from 'react';\nimport CreateForm from './MealCreateForm';\nimport UpdateForm from \"./MealUpdateForm\";\nimport DateAccordion from \"./DateAccordion\";\nimport Accordion from 'react-bootstrap/Accordion';\n\nexport default function Meals({log_id}) {\n    const store = mealsStore();\n    const set = new Set();\n    const arr = [];\n\n    function convertSet(set) {\n        for(const item of set) {\n            arr.push(item);\n        }\n    }\n\n    return(\n        <div className=\"central-items\">\n            <h2>Meals</h2>\n\n            {store.meals && store.meals.map(meal => {\n                if(meal.log && meal.log.localeCompare(log_id.id) === 0){\n                    set.add(meal.date);\n                }\n            })}\n\n            {convertSet(set)}\n\n            <Accordion>\n                {arr && arr.map(date => {\n                    return <DateAccordion date={date} log_id={log_id} key={date}/>\n                })}\n            </Accordion>\n\n            <CreateForm log_id={log_id} />\n            <button onClick={() => store.toggleCreate()}>Create New Meal</button>\n            <UpdateForm />\n        </div>\n    );\n}\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAW;EAAA,IAAV;IAACC;EAAM,CAAC,GAAAD,IAAA;EAClC,MAAME,KAAK,GAAGX,UAAU,EAAE;EAC1B,MAAMY,GAAG,GAAG,IAAIC,GAAG,EAAE;EACrB,MAAMC,GAAG,GAAG,EAAE;EAEd,SAASC,UAAUA,CAACH,GAAG,EAAE;IACrB,KAAI,MAAMI,IAAI,IAAIJ,GAAG,EAAE;MACnBE,GAAG,CAACG,IAAI,CAACD,IAAI,CAAC;IAClB;EACJ;EAEA,oBACIT,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BZ,OAAA;MAAAY,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEbZ,KAAK,CAACa,KAAK,IAAIb,KAAK,CAACa,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;MACpC,IAAGA,IAAI,CAACC,GAAG,IAAID,IAAI,CAACC,GAAG,CAACC,aAAa,CAAClB,MAAM,CAACmB,EAAE,CAAC,KAAK,CAAC,EAAC;QACnDjB,GAAG,CAACkB,GAAG,CAACJ,IAAI,CAACK,IAAI,CAAC;MACtB;IACJ,CAAC,CAAC,EAEDhB,UAAU,CAACH,GAAG,CAAC,eAEhBL,OAAA,CAACF,SAAS;MAAAc,QAAA,EACLL,GAAG,IAAIA,GAAG,CAACW,GAAG,CAACM,IAAI,IAAI;QACpB,oBAAOxB,OAAA,CAACH,aAAa;UAAC2B,IAAI,EAAEA,IAAK;UAACrB,MAAM,EAAEA;QAAO,GAAMqB,IAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAClE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM,eAEZhB,OAAA,CAACL,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9BhB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMrB,KAAK,CAACsB,YAAY,EAAG;MAAAd,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACrEhB,OAAA,CAACJ,UAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACZ;AAEd;AAACW,EAAA,GAlCuB1B,KAAK;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}