{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst logsStore = create(set => {\n  var _s = $RefreshSig$();\n  return {\n    logs: null,\n    workouts: null,\n    create: false,\n    createForm: {\n      title: \"\",\n      body: \"\",\n      _id: null\n    },\n    updateForm: {\n      title: \"\",\n      body: \"\",\n      _id: null\n    },\n    setCreateFalse: () => {\n      set({\n        create: false\n      });\n    },\n    updateCreateFormField: e => {\n      const {\n        name,\n        value\n      } = e.target;\n      set(state => {\n        return {\n          createForm: {\n            ...state.createForm,\n            [name]: value\n          }\n        };\n      });\n    },\n    updateUpdateFormField: e => {\n      const {\n        name,\n        value\n      } = e.target;\n      set(state => {\n        return {\n          updateForm: {\n            ...state.updateForm,\n            [name]: value\n          }\n        };\n      });\n    },\n    fetchLogs: async () => {\n      const res = await axios.get(\"/logs\");\n      set({\n        logs: res.data.logs\n      });\n    },\n    createLog: async e => {\n      const {\n        createForm,\n        logs\n      } = logsStore.getState();\n      e.preventDefault();\n      const res = await axios.post(\"/logs\", createForm);\n      set({\n        logs: [...logs, res.data.log],\n        createForm: {\n          title: \"\",\n          body: \"\"\n        },\n        create: false\n      });\n    },\n    deleteLog: async _id => {\n      const {\n        logs\n      } = logsStore.getState();\n      await axios.delete(`/logs/${_id}`);\n      const newLogs = logs.filter(log => {\n        return log._id !== _id;\n      });\n      set({\n        logs: newLogs\n      });\n    },\n    viewLog: _s(async _id => {\n      _s();\n      const navigate = useNavigate();\n      const res = await axios.get(`/logs/${_id}/workouts`);\n      set({\n        workouts: res.data.workouts\n      });\n    }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n      return [useNavigate];\n    }),\n    toggleUpdate: log => {\n      set({\n        updateForm: {\n          title: log.title,\n          body: log.body,\n          _id: log._id\n        }\n      });\n    },\n    toggleCreate: log => {\n      set({\n        create: true\n      });\n    },\n    updateLog: async e => {\n      e.preventDefault();\n      const {\n        updateForm: {\n          title,\n          body,\n          _id\n        },\n        logs\n      } = logsStore.getState();\n      const res = await axios.put(`/logs/${_id}`, {\n        title,\n        body\n      });\n      const newLogs = [...logs];\n      const logIndex = logs.findIndex(log => {\n        return log._id === _id;\n      });\n      newLogs[logIndex] = res.data.log;\n      set({\n        logs: newLogs,\n        updateForm: {\n          title: \"\",\n          body: \"\",\n          _id: null\n        }\n      });\n    }\n  };\n});\nexport default logsStore;","map":{"version":3,"names":["create","axios","useNavigate","logsStore","set","_s","$RefreshSig$","logs","workouts","createForm","title","body","_id","updateForm","setCreateFalse","updateCreateFormField","e","name","value","target","state","updateUpdateFormField","fetchLogs","res","get","data","createLog","getState","preventDefault","post","log","deleteLog","delete","newLogs","filter","viewLog","navigate","toggleUpdate","toggleCreate","updateLog","put","logIndex","findIndex"],"sources":["/Users/aidankatz/Projects/logbook-simple/frontend/src/stores/logsStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst logsStore = create((set) => ({\n    logs: null,\n\n    workouts: null,\n\n    create: false,\n\n    createForm: {\n        title: \"\",\n        body: \"\",\n        _id: null\n    },\n\n    updateForm: {\n        title: \"\",\n        body: \"\",\n        _id: null\n    },\n\n    setCreateFalse: () => {\n        set({\n            create: false\n        });\n    },\n\n    updateCreateFormField: (e) => {\n        const {name, value} = e.target;\n        set((state) => {\n            return {\n                createForm: {\n                    ...state.createForm,\n                    [name]: value\n                }\n            };\n        });\n    },\n\n    updateUpdateFormField: (e) => {\n        const {name, value} = e.target;\n\n        set(state => {\n            return {\n                updateForm: {\n                    ...state.updateForm,\n                    [name]: value\n                }\n            }\n        });\n    },\n\n    fetchLogs: async () => {\n        const res = await axios.get(\"/logs\");\n        set({\n            logs: res.data.logs\n        });\n    },\n\n    createLog: async (e) => {\n        const { createForm, logs } = logsStore.getState();\n        e.preventDefault();\n        const res = await axios.post(\"/logs\", createForm);\n\n        set({\n            logs: [...logs, res.data.log],\n            createForm: { title: \"\", body: \"\"},\n            create: false\n        });\n    },\n\n    deleteLog: async (_id) => {\n        const { logs } = logsStore.getState();\n\n        await axios.delete(`/logs/${_id}`);\n\n        const newLogs = logs.filter((log) => {\n            return log._id !== _id;\n        });\n\n        set({\n            logs: newLogs\n        });\n    },\n\n    viewLog: async (_id) => {\n        const navigate = useNavigate();\n        const res = await axios.get(`/logs/${_id}/workouts`);\n        set({\n            workouts: res.data.workouts\n        });\n\n    },\n\n    toggleUpdate: (log) => {\n        set({\n            updateForm: {\n                title: log.title,\n                body: log.body,\n                _id: log._id\n            }\n        });\n    },\n\n    toggleCreate: (log) => {\n        set({\n            create: true\n        });\n    },\n\n    updateLog: async (e) => {\n        e.preventDefault();\n        const {updateForm: {title, body, _id}, logs} = logsStore.getState();\n        const res = await axios.put(`/logs/${_id}`, {title, body});\n\n        const newLogs = [...logs];\n        const logIndex = logs.findIndex((log) => {\n            return log._id === _id;\n        });\n        newLogs[logIndex] = res.data.log;\n\n        set({\n            logs: newLogs,\n            updateForm: {\n                title: \"\", body: \"\", _id: null\n            }\n        });\n    }\n  }));\n\nexport default logsStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}