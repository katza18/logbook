{"ast":null,"code":"import { create } from \"zustand\";\nimport axios from \"axios\";\nconst authStore = create(set => ({\n  loggedIn: null,\n  loginForm: {\n    email: \"\",\n    password: \"\"\n  },\n  signupForm: {\n    email: \"\",\n    password: \"\"\n  },\n  updateLoginForm: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        loginForm: {\n          ...state.loginForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  updateSignupForm: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        signupForm: {\n          ...state.signupForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  login: async e => {\n    const {\n      loginForm\n    } = authStore.getState();\n    await axios.post('/login', loginForm, {\n      withCredentials: true\n    });\n    set({\n      loggedIn: true,\n      loginForm: {\n        email: \"\",\n        password: \"\"\n      }\n    });\n  },\n  signup: async e => {\n    const {\n      signupForm\n    } = authStore.getState();\n    await axios.post('/signup', signupForm, {\n      withCredentials: true\n    });\n    set({\n      signupForm: {\n        email: \"\",\n        password: \"\"\n      }\n    });\n  },\n  checkAuth: async () => {\n    try {\n      await axios.get('/check-auth', {\n        withCredentials: true\n      });\n      set({\n        loggedIn: true\n      });\n    } catch (err) {\n      set({\n        loggedIn: false\n      });\n    }\n  },\n  logout: async () => {\n    await axios.get('/logout', {\n      withCredentials: true\n    });\n    set({\n      loggedIn: false\n    });\n  }\n}));\nexport default authStore;","map":{"version":3,"names":["create","axios","authStore","set","loggedIn","loginForm","email","password","signupForm","updateLoginForm","e","name","value","target","state","updateSignupForm","login","getState","post","withCredentials","signup","checkAuth","get","err","logout"],"sources":["/Users/aidankatz/Projects/logbook-simple/frontend/src/stores/authStore.js"],"sourcesContent":["import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst authStore = create((set) => ({\n    loggedIn: null,\n\n    loginForm: {\n        email: \"\",\n        password: \"\"\n    },\n\n    signupForm: {\n        email: \"\",\n        password: \"\"\n    },\n\n    updateLoginForm: (e) => {\n        const {name, value} = e.target;\n\n        set(state => {\n            return {\n                loginForm: {\n                    ...state.loginForm,\n                    [name]: value\n                }\n            }\n        });\n\n    },\n\n    updateSignupForm: (e) => {\n        const {name, value} = e.target;\n\n        set(state => {\n            return {\n                signupForm: {\n                    ...state.signupForm,\n                    [name]: value\n                }\n            }\n        });\n\n    },\n\n    login: async (e) => {\n        const {loginForm} = authStore.getState();\n\n        await axios.post('/login', loginForm, { withCredentials: true});\n\n        set({loggedIn: true, loginForm: {\n            email: \"\",\n            password: \"\"\n        }});\n    },\n\n    signup: async (e) => {\n        const {signupForm} = authStore.getState();\n\n        await axios.post('/signup', signupForm, { withCredentials: true});\n\n        set({signupForm: {\n            email: \"\",\n            password: \"\"\n        }});\n    },\n\n    checkAuth: async () => {\n        try {\n            await axios.get('/check-auth', {withCredentials: true});\n            set({loggedIn: true});\n        } catch(err) {\n            set({loggedIn: false})\n        }\n\n    },\n\n    logout: async () => {\n        await axios.get('/logout', {withCredentials: true});\n        set({\n            loggedIn: false\n        })\n    }\n}));\n\nexport default authStore;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGF,MAAM,CAAEG,GAAG,KAAM;EAC/BC,QAAQ,EAAE,IAAI;EAEdC,SAAS,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC;EAEDC,UAAU,EAAE;IACRF,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC;EAEDE,eAAe,EAAGC,CAAC,IAAK;IACpB,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAE9BV,GAAG,CAACW,KAAK,IAAI;MACT,OAAO;QACHT,SAAS,EAAE;UACP,GAAGS,KAAK,CAACT,SAAS;UAClB,CAACM,IAAI,GAAGC;QACZ;MACJ,CAAC;IACL,CAAC,CAAC;EAEN,CAAC;EAEDG,gBAAgB,EAAGL,CAAC,IAAK;IACrB,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAE9BV,GAAG,CAACW,KAAK,IAAI;MACT,OAAO;QACHN,UAAU,EAAE;UACR,GAAGM,KAAK,CAACN,UAAU;UACnB,CAACG,IAAI,GAAGC;QACZ;MACJ,CAAC;IACL,CAAC,CAAC;EAEN,CAAC;EAEDI,KAAK,EAAE,MAAON,CAAC,IAAK;IAChB,MAAM;MAACL;IAAS,CAAC,GAAGH,SAAS,CAACe,QAAQ,EAAE;IAExC,MAAMhB,KAAK,CAACiB,IAAI,CAAC,QAAQ,EAAEb,SAAS,EAAE;MAAEc,eAAe,EAAE;IAAI,CAAC,CAAC;IAE/DhB,GAAG,CAAC;MAACC,QAAQ,EAAE,IAAI;MAAEC,SAAS,EAAE;QAC5BC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACd;IAAC,CAAC,CAAC;EACP,CAAC;EAEDa,MAAM,EAAE,MAAOV,CAAC,IAAK;IACjB,MAAM;MAACF;IAAU,CAAC,GAAGN,SAAS,CAACe,QAAQ,EAAE;IAEzC,MAAMhB,KAAK,CAACiB,IAAI,CAAC,SAAS,EAAEV,UAAU,EAAE;MAAEW,eAAe,EAAE;IAAI,CAAC,CAAC;IAEjEhB,GAAG,CAAC;MAACK,UAAU,EAAE;QACbF,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACd;IAAC,CAAC,CAAC;EACP,CAAC;EAEDc,SAAS,EAAE,MAAAA,CAAA,KAAY;IACnB,IAAI;MACA,MAAMpB,KAAK,CAACqB,GAAG,CAAC,aAAa,EAAE;QAACH,eAAe,EAAE;MAAI,CAAC,CAAC;MACvDhB,GAAG,CAAC;QAACC,QAAQ,EAAE;MAAI,CAAC,CAAC;IACzB,CAAC,CAAC,OAAMmB,GAAG,EAAE;MACTpB,GAAG,CAAC;QAACC,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC1B;EAEJ,CAAC;EAEDoB,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChB,MAAMvB,KAAK,CAACqB,GAAG,CAAC,SAAS,EAAE;MAACH,eAAe,EAAE;IAAI,CAAC,CAAC;IACnDhB,GAAG,CAAC;MACAC,QAAQ,EAAE;IACd,CAAC,CAAC;EACN;AACJ,CAAC,CAAC,CAAC;AAEH,eAAeF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}