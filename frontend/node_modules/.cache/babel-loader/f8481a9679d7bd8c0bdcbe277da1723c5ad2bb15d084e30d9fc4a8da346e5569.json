{"ast":null,"code":"var _jsxFileName = \"/Users/aidankatz/Projects/logbook/frontend/src/components/DateAccordion.js\";\nimport React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DateAccordion(_ref) {\n  let {\n    date\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: store.meals && store.meals.map(meal => {\n          if (meal.log && meal.date && meal.log.localeCompare(log_id.id) === 0 && meal.date.localeCompare(date) === 0) {\n            return /*#__PURE__*/_jsxDEV(Meal, {\n              meal: meal\n            }, meal._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 32\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = DateAccordion;\nvar _c;\n$RefreshReg$(_c, \"DateAccordion\");","map":{"version":3,"names":["React","Accordion","jsxDEV","_jsxDEV","DateAccordion","_ref","date","children","Item","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","store","meals","map","meal","log","localeCompare","log_id","id","Meal","_id","_c","$RefreshReg$"],"sources":["/Users/aidankatz/Projects/logbook/frontend/src/components/DateAccordion.js"],"sourcesContent":["import React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\n\nexport default function DateAccordion({date}) {\n    return (\n        <Accordion>\n            <Accordion.Item>\n            <Accordion.Header>\n                {date}\n            </Accordion.Header>\n            <Accordion.Body>\n                {store.meals && store.meals.map(meal => {\n                    if(meal.log && meal.date && meal.log.localeCompare(log_id.id) === 0 && meal.date.localeCompare(date) === 0){\n                        return <Meal meal={meal} key={meal._id} />\n                    }\n                })}\n            </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAS;EAAA,IAAR;IAACC;EAAI,CAAC,GAAAD,IAAA;EACxC,oBACIF,OAAA,CAACF,SAAS;IAAAM,QAAA,eACNJ,OAAA,CAACF,SAAS,CAACO,IAAI;MAAAD,QAAA,gBACfJ,OAAA,CAACF,SAAS,CAACQ,MAAM;QAAAF,QAAA,EACZD;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACU,eACnBV,OAAA,CAACF,SAAS,CAACa,IAAI;QAAAP,QAAA,EACVQ,KAAK,CAACC,KAAK,IAAID,KAAK,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;UACpC,IAAGA,IAAI,CAACC,GAAG,IAAID,IAAI,CAACZ,IAAI,IAAIY,IAAI,CAACC,GAAG,CAACC,aAAa,CAACC,MAAM,CAACC,EAAE,CAAC,KAAK,CAAC,IAAIJ,IAAI,CAACZ,IAAI,CAACc,aAAa,CAACd,IAAI,CAAC,KAAK,CAAC,EAAC;YACvG,oBAAOH,OAAA,CAACoB,IAAI;cAACL,IAAI,EAAEA;YAAK,GAAMA,IAAI,CAACM,GAAG;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAI;UAC9C;QACJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACW;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEpB;AAACY,EAAA,GAjBuBrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}