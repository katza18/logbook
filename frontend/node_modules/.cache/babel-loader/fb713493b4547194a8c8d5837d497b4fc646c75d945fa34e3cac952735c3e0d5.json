{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nconst workoutsStore = create(set => ({\n  workouts: null,\n  create: false,\n  createForm: {\n    title: \"\",\n    body: \"\",\n    date: \"\",\n    log: null,\n    _id: null\n  },\n  updateForm: {\n    title: \"\",\n    body: \"\",\n    date: null,\n    _id: null\n  },\n  setCreateFalse: () => {\n    set({\n      create: false\n    });\n  },\n  updateCreateFormField: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        createForm: {\n          ...state.createForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  updateUpdateFormField: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        updateForm: {\n          ...state.updateForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  fetchWorkouts: async _id => {\n    const res = await axios.get(`/logs/${_id}/workouts`);\n    set({\n      workouts: res.data.workouts\n    });\n  },\n  createWorkout: async (e, log_id) => {\n    const {\n      createForm,\n      workouts\n    } = workoutsStore.getState();\n    e.preventDefault();\n    console.log(log_id);\n    //add logbook to the createForm\n    set(state => {\n      return {\n        createForm: {\n          ...state.createForm,\n          log: log_id.id\n        }\n      };\n    });\n    const res = await axios.post(\"/workouts\", createForm);\n    set({\n      workouts: [...workouts, res.data.workout],\n      createForm: {\n        title: \"\",\n        body: \"\",\n        date: \"\",\n        logbook: null,\n        _id: null\n      },\n      create: false\n    });\n  },\n  deleteWorkout: async _id => {\n    const {\n      workouts\n    } = workoutsStore.getState();\n    await axios.delete(`/workouts/${_id}`);\n    const newWorkouts = workouts.filter(workout => {\n      return workout._id !== _id;\n    });\n    set({\n      workouts: newWorkouts\n    });\n  },\n  toggleUpdate: workout => {\n    set({\n      updateForm: {\n        title: workout.title,\n        body: workout.body,\n        date: workout.date,\n        _id: workout._id\n      }\n    });\n  },\n  toggleCreate: workout => {\n    set({\n      create: true\n    });\n  },\n  updateWorkout: async e => {\n    e.preventDefault();\n    const {\n      updateForm: {\n        title,\n        body,\n        date,\n        _id\n      },\n      workouts\n    } = workoutsStore.getState();\n    const res = await axios.put(`/workouts/${_id}`, {\n      title,\n      body,\n      date\n    });\n    const newWorkouts = [...workouts];\n    const workoutIndex = workouts.findIndex(workout => {\n      return workout._id === _id;\n    });\n    newWorkouts[workoutIndex] = res.data.workout;\n    set({\n      workouts: newWorkouts,\n      updateForm: {\n        title: \"\",\n        body: \"\",\n        _id: null,\n        date: null\n      }\n    });\n  }\n}));\nexport default workoutsStore;","map":{"version":3,"names":["create","axios","workoutsStore","set","workouts","createForm","title","body","date","log","_id","updateForm","setCreateFalse","updateCreateFormField","e","name","value","target","state","updateUpdateFormField","fetchWorkouts","res","get","data","createWorkout","log_id","getState","preventDefault","console","id","post","workout","logbook","deleteWorkout","delete","newWorkouts","filter","toggleUpdate","toggleCreate","updateWorkout","put","workoutIndex","findIndex"],"sources":["/Users/aidankatz/Projects/logbook-simple/frontend/src/stores/workoutsStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\n\nconst workoutsStore = create((set) => ({\n    workouts: null,\n    create: false,\n\n    createForm: {\n        title: \"\",\n        body: \"\",\n        date: \"\",\n        log: null,\n        _id: null\n    },\n\n    updateForm: {\n        title: \"\",\n        body: \"\",\n        date: null,\n        _id: null\n    },\n\n    setCreateFalse: () => {\n        set({\n            create: false\n        });\n    },\n\n    updateCreateFormField: (e) => {\n        const {name, value} = e.target;\n        set((state) => {\n            return {\n                createForm: {\n                    ...state.createForm,\n                    [name]: value\n                }\n            };\n        });\n    },\n\n    updateUpdateFormField: (e) => {\n        const {name, value} = e.target;\n\n        set(state => {\n            return {\n                updateForm: {\n                    ...state.updateForm,\n                    [name]: value\n                }\n            }\n        });\n    },\n\n    fetchWorkouts: async (_id) => {\n        const res = await axios.get(`/logs/${_id}/workouts`);\n        set({\n            workouts: res.data.workouts\n        });\n    },\n\n    createWorkout: async (e, log_id) => {\n        const { createForm, workouts } = workoutsStore.getState();\n        e.preventDefault();\n        console.log(log_id);\n        //add logbook to the createForm\n        set(state => {\n            return {\n                createForm: {\n                    ...state.createForm,\n                    log: log_id.id\n                }\n            }\n        });\n\n        const res = await axios.post(\"/workouts\", createForm);\n\n        set({\n            workouts: [...workouts, res.data.workout],\n            createForm: { title: \"\", body: \"\", date: \"\", logbook: null, _id: null},\n            create: false\n        });\n    },\n\n    deleteWorkout: async (_id) => {\n        const { workouts } = workoutsStore.getState();\n\n        await axios.delete(`/workouts/${_id}`);\n\n        const newWorkouts = workouts.filter((workout) => {\n            return workout._id !== _id;\n        });\n\n        set({\n            workouts: newWorkouts\n        });\n    },\n\n    toggleUpdate: (workout) => {\n        set({\n            updateForm: {\n                title: workout.title,\n                body: workout.body,\n                date: workout.date,\n                _id: workout._id\n            }\n        });\n    },\n\n    toggleCreate: (workout) => {\n        set({\n            create: true\n        });\n    },\n\n    updateWorkout: async (e) => {\n        e.preventDefault();\n        const {updateForm: {title, body, date, _id}, workouts} = workoutsStore.getState();\n        const res = await axios.put(`/workouts/${_id}`, {title, body, date});\n\n        const newWorkouts = [...workouts];\n        const workoutIndex = workouts.findIndex((workout) => {\n            return workout._id === _id;\n        });\n        newWorkouts[workoutIndex] = res.data.workout;\n\n        set({\n            workouts: newWorkouts,\n            updateForm: {\n                title: \"\", body: \"\", _id: null, date: null\n            }\n        });\n    }\n  }));\n\nexport default workoutsStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}