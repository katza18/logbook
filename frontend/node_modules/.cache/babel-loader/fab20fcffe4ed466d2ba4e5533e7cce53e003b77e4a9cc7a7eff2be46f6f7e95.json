{"ast":null,"code":"var _jsxFileName = \"/Users/aidankatz/Projects/logbook-simple/frontend/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport authStore from \"../stores/authStore\";\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n  const store = authStore();\n  const navigate = useNavigate();\n  const loginHandler = async e => {\n    e.preventDefault();\n    await store.login();\n\n    //navigate to home\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: loginHandler,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Enter email\",\n        value: store.loginForm.email,\n        onChange: store.updateLoginForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: store.loginForm.password,\n        onChange: store.updateLoginForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/signup\",\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n/*\n<form onSubmit={loginHandler}>\n            <input type=\"email\" name=\"email\" value={store.loginForm.email} onChange={store.updateLoginForm} />\n            <input type=\"password\" name=\"password\" value={store.loginForm.password} onChange={store.updateLoginForm} />\n            <button type=\"submit\">Login</button>\n        </form>\n        <div>\n*/\n_s(LoginForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","authStore","useNavigate","Button","Form","jsxDEV","_jsxDEV","LoginForm","_s","store","navigate","loginHandler","e","preventDefault","login","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","name","placeholder","value","loginForm","email","onChange","updateLoginForm","Text","password","variant","href","_c","$RefreshReg$"],"sources":["/Users/aidankatz/Projects/logbook-simple/frontend/src/components/LoginForm.js"],"sourcesContent":["import React from \"react\";\nimport authStore from \"../stores/authStore\";\nimport {useNavigate} from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport default function LoginForm() {\n    const store = authStore();\n    const navigate = useNavigate();\n\n    const loginHandler = async (e) => {\n        e.preventDefault();\n        await store.login();\n\n        //navigate to home\n        navigate('/');\n    };\n\n    return(\n        <Form onSubmit={loginHandler}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" name =\"email\" placeholder=\"Enter email\" value={store.loginForm.email} onChange={store.updateLoginForm} />\n                <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={store.loginForm.password} onChange={store.updateLoginForm} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            <a href=\"/signup\">Signup</a>\n        </Form>\n    );\n}\n\n/*\n<form onSubmit={loginHandler}>\n            <input type=\"email\" name=\"email\" value={store.loginForm.email} onChange={store.updateLoginForm} />\n            <input type=\"password\" name=\"password\" value={store.loginForm.password} onChange={store.updateLoginForm} />\n            <button type=\"submit\">Login</button>\n        </form>\n        <div>\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}