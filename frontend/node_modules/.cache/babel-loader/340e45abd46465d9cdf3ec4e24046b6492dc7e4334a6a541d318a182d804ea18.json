{"ast":null,"code":"var _jsxFileName = \"/Users/aidankatz/Projects/logbook-simple/frontend/src/components/ExercisesTable.js\";\nimport Table from 'react-bootstrap/Table';\nimport exercisesStore from '../stores/exercisesStore';\nimport Exercise from './Exercise';\nimport ExerciseStats from './ExerciseStats';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExercisesTable(_ref) {\n  let {\n    workout_id\n  } = _ref;\n  const store = exercisesStore();\n  let count = 1,\n    reps = 0,\n    sets = 0;\n  return /*#__PURE__*/_jsxDEV(Col, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exercises:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      form: \"update\",\n      onSubmit: store.updateExercise,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Reps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Intensity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: store.exercises && store.exercises.map(exercise => {\n            try {\n              if (exercise.workout && exercise.workout.localeCompare(workout_id.id) === 0) reps += parseInt(exercise.reps);\n              sets += parseInt(exercise.sets);\n              return /*#__PURE__*/_jsxDEV(Exercise, {\n                number: count++,\n                exercise: exercise\n              }, exercise._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 32\n              }, this);\n            } catch (err) {\n              console.log(err);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => store.createExercise(e, workout_id.id),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), store.updating && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(ExerciseStats, {\n        reps: reps,\n        sets: sets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = ExercisesTable;\nvar _c;\n$RefreshReg$(_c, \"ExercisesTable\");","map":{"version":3,"names":["Table","exercisesStore","Exercise","ExerciseStats","Col","jsxDEV","_jsxDEV","ExercisesTable","_ref","workout_id","store","count","reps","sets","children","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","updateExercise","striped","bordered","hover","variant","colSpan","exercises","map","exercise","workout","localeCompare","id","parseInt","number","_id","err","console","log","onClick","e","createExercise","updating","type","_c","$RefreshReg$"],"sources":["/Users/aidankatz/Projects/logbook-simple/frontend/src/components/ExercisesTable.js"],"sourcesContent":["import Table from 'react-bootstrap/Table';\nimport exercisesStore from '../stores/exercisesStore';\nimport Exercise from './Exercise';\nimport ExerciseStats from './ExerciseStats';\nimport Col from 'react-bootstrap/Col';\n\nexport default function ExercisesTable({workout_id}) {\n    const store = exercisesStore();\n\n    let count = 1, reps = 0, sets = 0;\n\n\n    return(\n    <Col>\n    <h1>Exercises:</h1>\n    <form form=\"update\" onSubmit={store.updateExercise}>\n    <Table striped bordered hover variant=\"dark\">\n        <thead>\n        <tr>\n            <th>#</th>\n            <th>Exercise</th>\n            <th>Weight</th>\n            <th>Sets</th>\n            <th>Reps</th>\n            <th>Intensity</th>\n            <th>Notes</th>\n            <th colSpan={2}>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n            {/* eslint-disable-next-line*/}\n            {store.exercises && store.exercises.map(exercise => {\n                try {\n                    if (exercise.workout && exercise.workout.localeCompare(workout_id.id) === 0)\n                        reps += parseInt(exercise.reps);\n                        sets += parseInt(exercise.sets);\n                        return <Exercise number={count++} exercise={exercise} key={exercise._id} />;\n                } catch(err) {\n                    console.log(err);\n                }\n            })}\n        </tbody>\n    </Table>\n    <button onClick={(e) => store.createExercise(e, workout_id.id)}>Add</button>\n    {store.updating && <button type=\"submit\">Update</button>}\n    <ExerciseStats reps={reps} sets={sets}/>\n    </form>\n    </Col>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}