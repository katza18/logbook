{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nconst exercisesStore = create(set => ({\n  exercises: null,\n  create: false,\n  //may not need\n  createForm: {\n    number: \"\",\n    exercise: \"\",\n    weight: \"\",\n    sets: \"\",\n    reps: \"\",\n    intensity: \"\",\n    notes: \"\",\n    _id: null\n  },\n  /*\n  updateForm: {\n      title: \"\",\n      body: \"\",\n      date: null,\n      _id: null\n  },\n  */\n\n  setCreateFalse: () => {\n    set({\n      create: false\n    });\n  },\n  /*\n  updateCreateFormField: (e) => {\n      const {name, value} = e.target;\n      set((state) => {\n          return {\n              createForm: {\n                  ...state.createForm,\n                  [name]: value\n              }\n          };\n      });\n  },\n  */\n\n  updateUpdateFormField: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        updateForm: {\n          ...state.updateForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  fetchExercises: async _id => {\n    const res = await axios.get(`/workouts/${_id}/exercises`);\n    set({\n      exercises: res.data.exercises\n    });\n  },\n  createExercise: async e => {\n    //create an empty exercise that will be updated\n    const {\n      createForm,\n      exercises\n    } = exercisesStore.getState();\n    e.preventDefault();\n    const res = await axios.post(\"/workouts\", createForm);\n    set({\n      exercises: [...exercises, res.data.exercise]\n    });\n  },\n  deleteExercise: async _id => {\n    const {\n      exercises\n    } = exercisesStore.getState();\n    await axios.delete(`/exercises/${_id}`);\n    const newExercises = exercises.filter(exercise => {\n      return exercise._id !== _id;\n    });\n    set({\n      workouts: newWorkouts\n    });\n  },\n  toggleUpdate: exercise => {\n    set({\n      updateForm: {\n        name: exercise.name,\n        body: exercise.body,\n        _id: exercise._id\n      }\n    });\n  },\n  toggleCreate: workout => {\n    set({\n      create: true\n    });\n  },\n  updateWorkout: async e => {\n    e.preventDefault();\n    const {\n      updateForm: {\n        title,\n        body,\n        date,\n        _id\n      },\n      workouts\n    } = workoutsStore.getState();\n    const res = await axios.put(`/workouts/${_id}`, {\n      title,\n      body,\n      date\n    });\n    const newWorkouts = [...workouts];\n    const workoutIndex = workouts.findIndex(workout => {\n      return workout._id === _id;\n    });\n    newWorkouts[workoutIndex] = res.data.workout;\n    set({\n      workouts: newWorkouts,\n      updateForm: {\n        title: \"\",\n        body: \"\",\n        _id: null,\n        date: null\n      }\n    });\n  }\n}));\nexport default exercisesStore;","map":{"version":3,"names":["create","axios","exercisesStore","set","exercises","createForm","number","exercise","weight","sets","reps","intensity","notes","_id","setCreateFalse","updateUpdateFormField","e","name","value","target","state","updateForm","fetchExercises","res","get","data","createExercise","getState","preventDefault","post","deleteExercise","delete","newExercises","filter","workouts","newWorkouts","toggleUpdate","body","toggleCreate","workout","updateWorkout","title","date","workoutsStore","put","workoutIndex","findIndex"],"sources":["/Users/aidankatz/Projects/logbook-simple/frontend/src/stores/exercisesStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\n\nconst exercisesStore = create((set) => ({\n    exercises: null,\n    create: false,\n\n    //may not need\n    createForm: {\n        number: \"\",\n        exercise: \"\",\n        weight: \"\",\n        sets: \"\",\n        reps: \"\",\n        intensity: \"\",\n        notes: \"\",\n        _id: null\n    },\n\n    /*\n    updateForm: {\n        title: \"\",\n        body: \"\",\n        date: null,\n        _id: null\n    },\n    */\n\n    setCreateFalse: () => {\n        set({\n            create: false\n        });\n    },\n\n    /*\n    updateCreateFormField: (e) => {\n        const {name, value} = e.target;\n        set((state) => {\n            return {\n                createForm: {\n                    ...state.createForm,\n                    [name]: value\n                }\n            };\n        });\n    },\n    */\n\n    updateUpdateFormField: (e) => {\n        const {name, value} = e.target;\n\n        set(state => {\n            return {\n                updateForm: {\n                    ...state.updateForm,\n                    [name]: value\n                }\n            }\n        });\n    },\n\n    fetchExercises: async (_id) => {\n        const res = await axios.get(`/workouts/${_id}/exercises`);\n        set({\n            exercises: res.data.exercises\n        });\n    },\n\n    createExercise: async (e) => {\n        //create an empty exercise that will be updated\n        const { createForm, exercises } = exercisesStore.getState();\n        e.preventDefault();\n        const res = await axios.post(\"/workouts\", createForm);\n\n        set({\n            exercises: [...exercises, res.data.exercise],\n        });\n    },\n\n    deleteExercise: async (_id) => {\n        const { exercises } = exercisesStore.getState();\n\n        await axios.delete(`/exercises/${_id}`);\n\n        const newExercises = exercises.filter((exercise) => {\n            return exercise._id !== _id;\n        });\n\n        set({\n            workouts: newWorkouts\n        });\n    },\n\n    toggleUpdate: (exercise) => {\n        set({\n            updateForm: {\n                name: exercise.name,\n                body: exercise.body,\n                _id: exercise._id\n            }\n        });\n    },\n\n    toggleCreate: (workout) => {\n        set({\n            create: true\n        });\n    },\n\n    updateWorkout: async (e) => {\n        e.preventDefault();\n        const {updateForm: {title, body, date, _id}, workouts} = workoutsStore.getState();\n        const res = await axios.put(`/workouts/${_id}`, {title, body, date});\n\n        const newWorkouts = [...workouts];\n        const workoutIndex = workouts.findIndex((workout) => {\n            return workout._id === _id;\n        });\n        newWorkouts[workoutIndex] = res.data.workout;\n\n        set({\n            workouts: newWorkouts,\n            updateForm: {\n                title: \"\", body: \"\", _id: null, date: null\n            }\n        });\n    }\n  }));\n\nexport default exercisesStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}